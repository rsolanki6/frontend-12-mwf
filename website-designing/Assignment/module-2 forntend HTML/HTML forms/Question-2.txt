Explain the difference between GET and POST methods in form submission. when should each be used?
    The GET and POST methods are two primary ways data is sent from an HTML form to a server.
    Their key difference lie in how they transmit data, their limitations, and their appropriate use cases.

    GET method :-
        
        data trasnmission :- 
            form data is appended to the URL as query parameters, visible in the browser's address bar.

        visiblity :- 
            parameters are directly exposed in the URL.

        data size limit :- 
            Has a practical limit on the amount of data that can be sent due to URL length restrictions (typically around 2048 characters, though its varies.)
        
        idempotency :-
            GET requests are considered idempotent, meaning mutliple identical requests should have the same effects as a single requests
            (e.g., retrieving the same data)

        caching & bookmarking :-
            GET requests can be cached by browserand saved as bookmarks.

    POST method :-

        data trasnmission :-
            form data is sent in the body of the HTTP request, not visible in the URL.

        visiblity :-
            parameters are not directly exposed in the URL.

        data size limit :- 
            generally has no practical limit on a the amount of data that can be sent.

        idempotency :-
            POST requesta are generally not idempotent, as repeated identical requests can lead to multiple resource creations or modifications.

        caching & bookmarking :-
            POST requests are typically not cached by browses and cannot be easily bookmarked.


    When to use each :-

    Use GET when :-
    -> Retrieving data from the server, such as search queires, flitering options, or navigating through paginated result.
    -> The data is non-sensitive and can be exposed in the URL.
    -> The request should be cacheable and bookmarkable.
    -> This operation is idempotent (repeated requests have no additional side effects).

    Use POST when :-
    -> Submitting data that modifies or creates resources on the server, such as form submissions for creating new accounts, uploading files, or placing orders.
    -> Sending sensitive information like password or credit card details, as the data is not exposed in the URL.
    -> Sending large amount of data.
    -> The operation is not idempotent(repeated requests may lead to different outcomes).